# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/example-product-service

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
    
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
        
      # run tests!
      - run: ./gradlew clean build

      - store_test_results:
          path: build/test-results/test
          
      - store_artifacts:
          path: build
      
      - setup_remote_docker:
          docker_layer_caching: true
      
      # build and push Docker image
      - run: |
          TAG=0.1.$CIRCLE_BUILD_NUM
          ./gradlew docker
          # docker build -t ryandjf/example-product-service:$TAG .
          docker tag ryandjf/example-product-service ryandjf/example-product-service:$TAG
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push ryandjf/example-product-service:$TAG
  deploy-aws:
    docker:
      - image: circleci/python:2
    working_directory: ~/example-product-service
    steps:
      - attach_workspace: 
          at: /tmp
      - run: 
          name: Install kubectl
          command: |
            wget -O kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
      - run: 
          name: Install aws cli
          command: |
            sudo pip install awscli
            echo "export AWS_REGION=us-east-1" >> $BASH_ENV
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy-aws:
          requires:
            - build
          filters:
            branches:
              only: master